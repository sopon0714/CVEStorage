{
  "Software_Repo_MappingId": null,
  "Software_RepoId": "1b41d4b5-5f15-42b3-9ccb-b0bd54a4d0b3",
  "Software_Name": "phpDesigner 8 version 8.1.2",
  "CVEID": "CVE-2003-0249",
  "Summary": "PHP treats unknown methods such as \"PoSt\" as a GET request, which could allow attackers to intended access restrictions if PHP is running on a server that passes on all methods, such as Apache httpd 2.0, as demonstrated using a Limit directive.  NOTE: this issue has been disputed by the Apache security team, saying \"It is by design that PHP allows scripts to process any request method.  A script which does not explicitly verify the request method will hence be processed as normal for arbitrary methods.  It is therefore expected behaviour that one cannot implement per-method access control using the Apache configuration alone, which is the assumption made in this report.",
  "LastUpdate": 0,
  "CVEE": {
    "CVEEId": "CVE-2003-0249",
    "CVSS_V2_baseScore": 7.5,
    "CVSS_V2_Data": "{\"version\":\"2.0\",\"baseScore\":7.5,\"accessVector\":\"NETWORK\",\"vectorString\":\"AV:N/AC:L/Au:N/C:P/I:P/A:P\",\"authentication\":\"NONE\",\"integrityImpact\":\"PARTIAL\",\"accessComplexity\":\"LOW\",\"availabilityImpact\":\"PARTIAL\",\"confidentialityImpact\":\"PARTIAL\",\"scope\":null,\"attackVector\":null,\"baseSeverity\":null,\"userInteraction\":null,\"attackComplexity\":null,\"privilegesRequired\":null}",
    "CVSS_V3_baseScore": null,
    "CVSS_V3_Data": null,
    "PublishedDate": "2003-12-31T05:00:00",
    "ModifyDate": "2024-11-20T23:44:18.683",
    "VulnStatus": "Modified",
    "JsonData": "{\"id\": \"CVE-2003-0249\", \"summary\": \"PHP treats unknown methods such as \\\"PoSt\\\" as a GET request, which could allow attackers to intended access restrictions if PHP is running on a server that passes on all methods, such as Apache httpd 2.0, as demonstrated using a Limit directive.  NOTE: this issue has been disputed by the Apache security team, saying \\\"It is by design that PHP allows scripts to process any request method.  A script which does not explicitly verify the request method will hence be processed as normal for arbitrary methods.  It is therefore expected behaviour that one cannot implement per-method access control using the Apache configuration alone, which is the assumption made in this report.\", \"created_at\": \"2003-12-31T05:00:00Z\", \"updated_at\": \"2024-11-20T23:44:18Z\", \"cvss\": {\"v2\": 7.5, \"v3\": null}, \"vendors\": {\"php\": [\"php\"]}, \"cwes\": [\"NVD-CWE-Other\"], \"raw_nvd_data\": {\"id\": \"CVE-2003-0249\", \"cveTags\": [{\"tags\": [\"disputed\"], \"sourceIdentifier\": \"cve@mitre.org\"}], \"metrics\": {\"cvssMetricV2\": [{\"type\": \"Primary\", \"source\": \"nvd@nist.gov\", \"cvssData\": {\"version\": \"2.0\", \"baseScore\": 7.5, \"accessVector\": \"NETWORK\", \"vectorString\": \"AV:N/AC:L/Au:N/C:P/I:P/A:P\", \"authentication\": \"NONE\", \"integrityImpact\": \"PARTIAL\", \"accessComplexity\": \"LOW\", \"availabilityImpact\": \"PARTIAL\", \"confidentialityImpact\": \"PARTIAL\"}, \"acInsufInfo\": false, \"impactScore\": 6.4, \"baseSeverity\": \"HIGH\", \"obtainAllPrivilege\": false, \"exploitabilityScore\": 10.0, \"obtainUserPrivilege\": false, \"obtainOtherPrivilege\": true, \"userInteractionRequired\": false}]}, \"published\": \"2003-12-31T05:00:00.000\", \"references\": [{\"url\": \"http://www.idefense.com/intelligence/vulnerabilities/display.php?id=97\", \"tags\": [\"Vendor Advisory\"], \"source\": \"cve@mitre.org\"}, {\"url\": \"http://www.idefense.com/intelligence/vulnerabilities/display.php?id=97\", \"tags\": [\"Vendor Advisory\"], \"source\": \"af854a3a-2127-422b-91ae-364da2661108\"}], \"vulnStatus\": \"Modified\", \"weaknesses\": [{\"type\": \"Primary\", \"source\": \"nvd@nist.gov\", \"description\": [{\"lang\": \"en\", \"value\": \"NVD-CWE-Other\"}]}], \"descriptions\": [{\"lang\": \"en\", \"value\": \"PHP treats unknown methods such as \\\"PoSt\\\" as a GET request, which could allow attackers to intended access restrictions if PHP is running on a server that passes on all methods, such as Apache httpd 2.0, as demonstrated using a Limit directive.  NOTE: this issue has been disputed by the Apache security team, saying \\\"It is by design that PHP allows scripts to process any request method.  A script which does not explicitly verify the request method will hence be processed as normal for arbitrary methods.  It is therefore expected behaviour that one cannot implement per-method access control using the Apache configuration alone, which is the assumption made in this report.\"}], \"lastModified\": \"2024-11-20T23:44:18.683\", \"configurations\": [{\"nodes\": [{\"negate\": false, \"cpeMatch\": [{\"criteria\": \"cpe:2.3:a:php:php:4.4.6:*:*:*:*:*:*:*\", \"vulnerable\": true, \"matchCriteriaId\": \"84B70263-37AA-4539-A286-12038A3792C6\"}], \"operator\": \"OR\"}]}], \"sourceIdentifier\": \"cve@mitre.org\"}}\n",
    "LastUpdate": 0,
    "VendorL": [
      "php"
    ],
    "ProductL": [
      "php"
    ],
    "Software_Repo_Mappings": []
  },
  "Software_Repo_Mapping_Conditions": [
    {
      "Software_Repo_Mapping_ConditionId": 0,
      "Software_Repo_MappingId": null,
      "Criteria": "cpe:2.3:a:php:php:4.4.6:*:*:*:*:*:*:*",
      "VersionEndExcluding": null,
      "VersionEndIncluding": null,
      "VersionStartExcluding": null,
      "VersionStartIncluding": null,
      "Vulnerable": true,
      "Software_Repo_Mapping": null
    }
  ]
}