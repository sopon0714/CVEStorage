{
  "Software_Repo_MappingId": null,
  "Software_RepoId": "e3490e94-3079-4942-b190-9d7b289fd197",
  "Software_Name": "Microsoft SQL Server Management Studio - 20.1",
  "CVEID": "CVE-2022-26612",
  "Summary": "In Apache Hadoop, The unTar function uses unTarUsingJava function on Windows and the built-in tar utility on Unix and other OSes. As a result, a TAR entry may create a symlink under the expected extraction directory which points to an external directory. A subsequent TAR entry may extract an arbitrary file into the external directory using the symlink name. This however would be caught by the same targetDirPath check on Unix because of the getCanonicalPath call. However on Windows, getCanonicalPath doesn't resolve symbolic links, which bypasses the check. unpackEntries during TAR extraction follows symbolic links which allows writing outside expected base directory on Windows. This was addressed in Apache Hadoop 3.2.3",
  "LastUpdate": 0,
  "CVEE": {
    "CVEEId": "CVE-2022-26612",
    "CVSS_V2_baseScore": 7.5,
    "CVSS_V2_Data": "{\"version\":\"2.0\",\"baseScore\":7.5,\"accessVector\":\"NETWORK\",\"vectorString\":\"AV:N/AC:L/Au:N/C:P/I:P/A:P\",\"authentication\":\"NONE\",\"integrityImpact\":\"PARTIAL\",\"accessComplexity\":\"LOW\",\"availabilityImpact\":\"PARTIAL\",\"confidentialityImpact\":\"PARTIAL\",\"scope\":null,\"attackVector\":null,\"baseSeverity\":null,\"userInteraction\":null,\"attackComplexity\":null,\"privilegesRequired\":null}",
    "CVSS_V3_baseScore": 9.8,
    "CVSS_V3_Data": "{\"version\":\"3.1\",\"baseScore\":9.8,\"accessVector\":null,\"vectorString\":\"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H\",\"authentication\":null,\"integrityImpact\":\"HIGH\",\"accessComplexity\":null,\"availabilityImpact\":\"HIGH\",\"confidentialityImpact\":\"HIGH\",\"scope\":\"UNCHANGED\",\"attackVector\":\"NETWORK\",\"baseSeverity\":\"CRITICAL\",\"userInteraction\":\"NONE\",\"attackComplexity\":\"LOW\",\"privilegesRequired\":\"NONE\"}",
    "PublishedDate": "2022-04-07T19:15:08.917",
    "ModifyDate": "2024-11-21T06:54:11.85",
    "VulnStatus": "Modified",
    "JsonData": "{\"id\": \"CVE-2022-26612\", \"summary\": \"In Apache Hadoop, The unTar function uses unTarUsingJava function on Windows and the built-in tar utility on Unix and other OSes. As a result, a TAR entry may create a symlink under the expected extraction directory which points to an external directory. A subsequent TAR entry may extract an arbitrary file into the external directory using the symlink name. This however would be caught by the same targetDirPath check on Unix because of the getCanonicalPath call. However on Windows, getCanonicalPath doesn't resolve symbolic links, which bypasses the check. unpackEntries during TAR extraction follows symbolic links which allows writing outside expected base directory on Windows. This was addressed in Apache Hadoop 3.2.3\", \"created_at\": \"2022-04-07T19:15:08Z\", \"updated_at\": \"2024-11-21T06:54:11Z\", \"cvss\": {\"v2\": 7.5, \"v3\": 9.8}, \"vendors\": {\"microsoft\": [\"windows\"], \"apache\": [\"hadoop\"]}, \"cwes\": [\"CWE-59\"], \"raw_nvd_data\": {\"id\": \"CVE-2022-26612\", \"metrics\": {\"cvssMetricV2\": [{\"type\": \"Primary\", \"source\": \"nvd@nist.gov\", \"cvssData\": {\"version\": \"2.0\", \"baseScore\": 7.5, \"accessVector\": \"NETWORK\", \"vectorString\": \"AV:N/AC:L/Au:N/C:P/I:P/A:P\", \"authentication\": \"NONE\", \"integrityImpact\": \"PARTIAL\", \"accessComplexity\": \"LOW\", \"availabilityImpact\": \"PARTIAL\", \"confidentialityImpact\": \"PARTIAL\"}, \"acInsufInfo\": false, \"impactScore\": 6.4, \"baseSeverity\": \"HIGH\", \"obtainAllPrivilege\": false, \"exploitabilityScore\": 10.0, \"obtainUserPrivilege\": false, \"obtainOtherPrivilege\": false, \"userInteractionRequired\": false}], \"cvssMetricV31\": [{\"type\": \"Primary\", \"source\": \"nvd@nist.gov\", \"cvssData\": {\"scope\": \"UNCHANGED\", \"version\": \"3.1\", \"baseScore\": 9.8, \"attackVector\": \"NETWORK\", \"baseSeverity\": \"CRITICAL\", \"vectorString\": \"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H\", \"integrityImpact\": \"HIGH\", \"userInteraction\": \"NONE\", \"attackComplexity\": \"LOW\", \"availabilityImpact\": \"HIGH\", \"privilegesRequired\": \"NONE\", \"confidentialityImpact\": \"HIGH\"}, \"impactScore\": 5.9, \"exploitabilityScore\": 3.9}]}, \"published\": \"2022-04-07T19:15:08.917\", \"references\": [{\"url\": \"https://lists.apache.org/thread/hslo7wzw2449gv1jyjk8g6ttd7935fyz\", \"tags\": [\"Exploit\", \"Vendor Advisory\"], \"source\": \"security@apache.org\"}, {\"url\": \"https://security.netapp.com/advisory/ntap-20220519-0004/\", \"tags\": [\"Third Party Advisory\"], \"source\": \"security@apache.org\"}, {\"url\": \"https://lists.apache.org/thread/hslo7wzw2449gv1jyjk8g6ttd7935fyz\", \"tags\": [\"Exploit\", \"Vendor Advisory\"], \"source\": \"af854a3a-2127-422b-91ae-364da2661108\"}, {\"url\": \"https://security.netapp.com/advisory/ntap-20220519-0004/\", \"tags\": [\"Third Party Advisory\"], \"source\": \"af854a3a-2127-422b-91ae-364da2661108\"}], \"vulnStatus\": \"Modified\", \"weaknesses\": [{\"type\": \"Primary\", \"source\": \"nvd@nist.gov\", \"description\": [{\"lang\": \"en\", \"value\": \"CWE-59\"}]}], \"descriptions\": [{\"lang\": \"en\", \"value\": \"In Apache Hadoop, The unTar function uses unTarUsingJava function on Windows and the built-in tar utility on Unix and other OSes. As a result, a TAR entry may create a symlink under the expected extraction directory which points to an external directory. A subsequent TAR entry may extract an arbitrary file into the external directory using the symlink name. This however would be caught by the same targetDirPath check on Unix because of the getCanonicalPath call. However on Windows, getCanonicalPath doesn't resolve symbolic links, which bypasses the check. unpackEntries during TAR extraction follows symbolic links which allows writing outside expected base directory on Windows. This was addressed in Apache Hadoop 3.2.3\"}, {\"lang\": \"es\", \"value\": \"En Apache Hadoop, la funci\\u00f3n unTar usa la funci\\u00f3n unTarUsingJava en Windows y la utilidad tar incorporada en Unix y otros sistemas operativos. Como resultado, una entrada TAR puede crear un enlace simb\\u00f3lico bajo el directorio de extracci\\u00f3n esperado que apunta a un directorio externo. Una entrada TAR posterior puede extraer un archivo arbitrario en el directorio externo usando el nombre del enlace simb\\u00f3lico. Sin embargo, esto ser\\u00eda detectado por la misma comprobaci\\u00f3n targetDirPath en Unix debido a la llamada getCanonicalPath. Sin embargo, en Windows, getCanonicalPath no resuelve los enlaces simb\\u00f3licos, lo que evita la comprobaci\\u00f3n. unpackEntries durante la extracci\\u00f3n del TAR sigue los enlaces simb\\u00f3licos, lo que permite escribir fuera del directorio base esperado en Windows. Esto ha sido abordado en Apache Hadoop versi\\u00f3n 3.2.3\"}], \"lastModified\": \"2024-11-21T06:54:11.850\", \"configurations\": [{\"nodes\": [{\"negate\": false, \"cpeMatch\": [{\"criteria\": \"cpe:2.3:a:apache:hadoop:*:*:*:*:*:*:*:*\", \"vulnerable\": true, \"matchCriteriaId\": \"21FCF606-7254-413A-8923-69887AED98D3\", \"versionEndExcluding\": \"3.2.3\"}, {\"criteria\": \"cpe:2.3:a:apache:hadoop:3.3.1:-:*:*:*:*:*:*\", \"vulnerable\": true, \"matchCriteriaId\": \"BBCE58D9-7178-4BBF-9204-D2F13EC068F6\"}, {\"criteria\": \"cpe:2.3:a:apache:hadoop:3.3.2:-:*:*:*:*:*:*\", \"vulnerable\": true, \"matchCriteriaId\": \"F560C4EF-56B6-4890-8068-8CFFAD7690D4\"}], \"operator\": \"OR\"}, {\"negate\": false, \"cpeMatch\": [{\"criteria\": \"cpe:2.3:o:microsoft:windows:-:*:*:*:*:*:*:*\", \"vulnerable\": false, \"matchCriteriaId\": \"A2572D17-1DE6-457B-99CC-64AFD54487EA\"}], \"operator\": \"OR\"}], \"operator\": \"AND\"}], \"sourceIdentifier\": \"security@apache.org\"}}\n",
    "LastUpdate": 0,
    "VendorL": [
      "microsoft",
      "apache"
    ],
    "ProductL": [
      "windows",
      "hadoop"
    ],
    "Software_Repo_Mappings": []
  },
  "Software_Repo_Mapping_Conditions": [
    {
      "Software_Repo_Mapping_ConditionId": 0,
      "Software_Repo_MappingId": null,
      "Criteria": "cpe:2.3:a:apache:hadoop:*:*:*:*:*:*:*:*",
      "VersionEndExcluding": "3.2.3",
      "VersionEndIncluding": null,
      "VersionStartExcluding": null,
      "VersionStartIncluding": null,
      "Vulnerable": true,
      "Software_Repo_Mapping": null
    },
    {
      "Software_Repo_Mapping_ConditionId": 0,
      "Software_Repo_MappingId": null,
      "Criteria": "cpe:2.3:a:apache:hadoop:3.3.1:-:*:*:*:*:*:*",
      "VersionEndExcluding": null,
      "VersionEndIncluding": null,
      "VersionStartExcluding": null,
      "VersionStartIncluding": null,
      "Vulnerable": true,
      "Software_Repo_Mapping": null
    },
    {
      "Software_Repo_Mapping_ConditionId": 0,
      "Software_Repo_MappingId": null,
      "Criteria": "cpe:2.3:a:apache:hadoop:3.3.2:-:*:*:*:*:*:*",
      "VersionEndExcluding": null,
      "VersionEndIncluding": null,
      "VersionStartExcluding": null,
      "VersionStartIncluding": null,
      "Vulnerable": true,
      "Software_Repo_Mapping": null
    }
  ]
}