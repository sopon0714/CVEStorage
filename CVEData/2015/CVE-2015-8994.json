{
  "Software_Repo_MappingId": null,
  "Software_RepoId": "1b41d4b5-5f15-42b3-9ccb-b0bd54a4d0b3",
  "Software_Name": "phpDesigner 8 version 8.1.2",
  "CVEID": "CVE-2015-8994",
  "Summary": "An issue was discovered in PHP 5.x and 7.x, when the configuration uses apache2handler/mod_php or php-fpm with OpCache enabled. With 5.x after 5.6.28 or 7.x after 7.0.13, the issue is resolved in a non-default configuration with the opcache.validate_permission=1 setting. The vulnerability details are as follows. In PHP SAPIs where PHP interpreters share a common parent process, Zend OpCache creates a shared memory object owned by the common parent during initialization. Child PHP processes inherit the SHM descriptor, using it to cache and retrieve compiled script bytecode (\"opcode\" in PHP jargon). Cache keys vary depending on configuration, but filename is a central key component, and compiled opcode can generally be run if a script's filename is known or can be guessed. Many common shared-hosting configurations change EUID in child processes to enforce privilege separation among hosted users (for example using mod_ruid2 for the Apache HTTP Server, or php-fpm user settings). In these scenarios, the default Zend OpCache behavior defeats script file permissions by sharing a single SHM cache among all child PHP processes. PHP scripts often contain sensitive information: Think of CMS configurations where reading or running another user's script usually means gaining privileges to the CMS database.",
  "LastUpdate": 0,
  "CVEE": {
    "CVEEId": "CVE-2015-8994",
    "CVSS_V2_baseScore": 6.8,
    "CVSS_V2_Data": "{\"version\":\"2.0\",\"baseScore\":6.8,\"accessVector\":\"NETWORK\",\"vectorString\":\"AV:N/AC:M/Au:N/C:P/I:P/A:P\",\"authentication\":\"NONE\",\"integrityImpact\":\"PARTIAL\",\"accessComplexity\":\"MEDIUM\",\"availabilityImpact\":\"PARTIAL\",\"confidentialityImpact\":\"PARTIAL\",\"scope\":null,\"attackVector\":null,\"baseSeverity\":null,\"userInteraction\":null,\"attackComplexity\":null,\"privilegesRequired\":null}",
    "CVSS_V3_baseScore": 7.5,
    "CVSS_V3_Data": "{\"version\":\"3.1\",\"baseScore\":7.5,\"accessVector\":null,\"vectorString\":\"CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H\",\"authentication\":null,\"integrityImpact\":\"HIGH\",\"accessComplexity\":null,\"availabilityImpact\":\"HIGH\",\"confidentialityImpact\":\"HIGH\",\"scope\":\"UNCHANGED\",\"attackVector\":\"NETWORK\",\"baseSeverity\":\"HIGH\",\"userInteraction\":\"NONE\",\"attackComplexity\":\"HIGH\",\"privilegesRequired\":\"LOW\"}",
    "PublishedDate": "2017-03-02T06:59:00.167",
    "ModifyDate": "2024-11-21T02:39:37.777",
    "VulnStatus": "Modified",
    "JsonData": "{\"id\": \"CVE-2015-8994\", \"summary\": \"An issue was discovered in PHP 5.x and 7.x, when the configuration uses apache2handler/mod_php or php-fpm with OpCache enabled. With 5.x after 5.6.28 or 7.x after 7.0.13, the issue is resolved in a non-default configuration with the opcache.validate_permission=1 setting. The vulnerability details are as follows. In PHP SAPIs where PHP interpreters share a common parent process, Zend OpCache creates a shared memory object owned by the common parent during initialization. Child PHP processes inherit the SHM descriptor, using it to cache and retrieve compiled script bytecode (\\\"opcode\\\" in PHP jargon). Cache keys vary depending on configuration, but filename is a central key component, and compiled opcode can generally be run if a script's filename is known or can be guessed. Many common shared-hosting configurations change EUID in child processes to enforce privilege separation among hosted users (for example using mod_ruid2 for the Apache HTTP Server, or php-fpm user settings). In these scenarios, the default Zend OpCache behavior defeats script file permissions by sharing a single SHM cache among all child PHP processes. PHP scripts often contain sensitive information: Think of CMS configurations where reading or running another user's script usually means gaining privileges to the CMS database.\", \"created_at\": \"2017-03-02T06:59:00Z\", \"updated_at\": \"2024-11-21T02:39:37Z\", \"cvss\": {\"v2\": 6.8, \"v3\": 7.5}, \"vendors\": {\"php\": [\"php\"]}, \"cwes\": [\"CWE-264\"], \"raw_nvd_data\": {\"id\": \"CVE-2015-8994\", \"metrics\": {\"cvssMetricV2\": [{\"type\": \"Primary\", \"source\": \"nvd@nist.gov\", \"cvssData\": {\"version\": \"2.0\", \"baseScore\": 6.8, \"accessVector\": \"NETWORK\", \"vectorString\": \"AV:N/AC:M/Au:N/C:P/I:P/A:P\", \"authentication\": \"NONE\", \"integrityImpact\": \"PARTIAL\", \"accessComplexity\": \"MEDIUM\", \"availabilityImpact\": \"PARTIAL\", \"confidentialityImpact\": \"PARTIAL\"}, \"acInsufInfo\": false, \"impactScore\": 6.4, \"baseSeverity\": \"MEDIUM\", \"obtainAllPrivilege\": false, \"exploitabilityScore\": 8.6, \"obtainUserPrivilege\": false, \"obtainOtherPrivilege\": false, \"userInteractionRequired\": false}], \"cvssMetricV31\": [{\"type\": \"Primary\", \"source\": \"nvd@nist.gov\", \"cvssData\": {\"scope\": \"UNCHANGED\", \"version\": \"3.1\", \"baseScore\": 7.5, \"attackVector\": \"NETWORK\", \"baseSeverity\": \"HIGH\", \"vectorString\": \"CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H\", \"integrityImpact\": \"HIGH\", \"userInteraction\": \"NONE\", \"attackComplexity\": \"HIGH\", \"availabilityImpact\": \"HIGH\", \"privilegesRequired\": \"LOW\", \"confidentialityImpact\": \"HIGH\"}, \"impactScore\": 5.9, \"exploitabilityScore\": 1.6}]}, \"published\": \"2017-03-02T06:59:00.167\", \"references\": [{\"url\": \"http://marc.info/?l=php-internals&m=147876797317925&w=2\", \"tags\": [\"Mailing List\"], \"source\": \"cve@mitre.org\"}, {\"url\": \"http://marc.info/?l=php-internals&m=147921016724565&w=2\", \"tags\": [\"Mailing List\"], \"source\": \"cve@mitre.org\"}, {\"url\": \"http://openwall.com/lists/oss-security/2017/02/28/1\", \"tags\": [\"Mailing List\"], \"source\": \"cve@mitre.org\"}, {\"url\": \"http://seclists.org/oss-sec/2016/q4/343\", \"tags\": [\"Mailing List\", \"Third Party Advisory\"], \"source\": \"cve@mitre.org\"}, {\"url\": \"http://seclists.org/oss-sec/2017/q1/520\", \"tags\": [\"Mailing List\", \"Third Party Advisory\"], \"source\": \"cve@mitre.org\"}, {\"url\": \"https://bugs.php.net/bug.php?id=69090\", \"tags\": [\"Exploit\", \"Issue Tracking\"], \"source\": \"cve@mitre.org\"}, {\"url\": \"https://ma.ttias.be/a-better-way-to-run-php-fpm/\", \"tags\": [\"Exploit\", \"Technical Description\", \"Third Party Advisory\"], \"source\": \"cve@mitre.org\"}, {\"url\": \"http://marc.info/?l=php-internals&m=147876797317925&w=2\", \"tags\": [\"Mailing List\"], \"source\": \"af854a3a-2127-422b-91ae-364da2661108\"}, {\"url\": \"http://marc.info/?l=php-internals&m=147921016724565&w=2\", \"tags\": [\"Mailing List\"], \"source\": \"af854a3a-2127-422b-91ae-364da2661108\"}, {\"url\": \"http://openwall.com/lists/oss-security/2017/02/28/1\", \"tags\": [\"Mailing List\"], \"source\": \"af854a3a-2127-422b-91ae-364da2661108\"}, {\"url\": \"http://seclists.org/oss-sec/2016/q4/343\", \"tags\": [\"Mailing List\", \"Third Party Advisory\"], \"source\": \"af854a3a-2127-422b-91ae-364da2661108\"}, {\"url\": \"http://seclists.org/oss-sec/2017/q1/520\", \"tags\": [\"Mailing List\", \"Third Party Advisory\"], \"source\": \"af854a3a-2127-422b-91ae-364da2661108\"}, {\"url\": \"https://bugs.php.net/bug.php?id=69090\", \"tags\": [\"Exploit\", \"Issue Tracking\"], \"source\": \"af854a3a-2127-422b-91ae-364da2661108\"}, {\"url\": \"https://ma.ttias.be/a-better-way-to-run-php-fpm/\", \"tags\": [\"Exploit\", \"Technical Description\", \"Third Party Advisory\"], \"source\": \"af854a3a-2127-422b-91ae-364da2661108\"}], \"vulnStatus\": \"Modified\", \"weaknesses\": [{\"type\": \"Primary\", \"source\": \"nvd@nist.gov\", \"description\": [{\"lang\": \"en\", \"value\": \"CWE-264\"}]}], \"descriptions\": [{\"lang\": \"en\", \"value\": \"An issue was discovered in PHP 5.x and 7.x, when the configuration uses apache2handler/mod_php or php-fpm with OpCache enabled. With 5.x after 5.6.28 or 7.x after 7.0.13, the issue is resolved in a non-default configuration with the opcache.validate_permission=1 setting. The vulnerability details are as follows. In PHP SAPIs where PHP interpreters share a common parent process, Zend OpCache creates a shared memory object owned by the common parent during initialization. Child PHP processes inherit the SHM descriptor, using it to cache and retrieve compiled script bytecode (\\\"opcode\\\" in PHP jargon). Cache keys vary depending on configuration, but filename is a central key component, and compiled opcode can generally be run if a script's filename is known or can be guessed. Many common shared-hosting configurations change EUID in child processes to enforce privilege separation among hosted users (for example using mod_ruid2 for the Apache HTTP Server, or php-fpm user settings). In these scenarios, the default Zend OpCache behavior defeats script file permissions by sharing a single SHM cache among all child PHP processes. PHP scripts often contain sensitive information: Think of CMS configurations where reading or running another user's script usually means gaining privileges to the CMS database.\"}, {\"lang\": \"es\", \"value\": \"Se ha descubierto un problema en PHP 5.x y 7.x, cuando la configuraci\\u00f3n utiliza apache2handler/mod_php o php-fpm con OpCache habilitado. Con 5.x despu\\u00e9s de la versi\\u00f3n 5.6.28 o 7.x despu\\u00e9s de la versi\\u00f3n 7.0.13, el problema se resuelve en una configuraci\\u00f3n no predeterminada con el ajuste opcache.validate_permission=1. Los detalles de la vulnerabilidad son los siguientes. En PHP SAPIs donde los int\\u00e9rpretes PHP comparten un proceso padre com\\u00fan, Zend OpCache crea un objeto de memoria compartido propiedad del padre com\\u00fan durante la inicializaci\\u00f3n. Los procesos Child PHP heredan el descriptor SHM, us\\u00e1ndolo para almacenar en cach\\u00e9 y recuperar la secuencia de comandos de bytecode (\\\"opcode\\\" en jerga PHP ). Las claves de cach\\u00e9 var\\u00edan dependiendo de la configuraci\\u00f3n, pero el nombre del archivo es un componente clave central y el c\\u00f3digo de operaci\\u00f3n compilado puede ejecutarse generalmente si un nombre de archivo de la secuencia de comandos es conocido o puede ser adivinado. Muchas configuraciones comunes de alojamiento compartido cambian el EUID en los procesos hijo para forzar la separaci\\u00f3n de privilegios entre los usuarios invitados (por ejemplo usando mod_ruid2 para el servidor HTTP de Apache o la configuraci\\u00f3n de usuario php-fpm). En estos escenarios, el comportamiento predeterminado de Zend OpCache invalida los permisos del archivo de secuencia de comandos compartiendo una sola cach\\u00e9 SHM entre todos los procesos hijo PHP. Las secuencias de comandos PHP a menudo contiene informaci\\u00f3n sensible: las configuraciones de Think of CMS donde leen o ejecutan las secuencias de comandos de otros usuarios generalmente significa obtener privilegios de la base de datos CMS.\"}], \"lastModified\": \"2024-11-21T02:39:37.777\", \"configurations\": [{\"nodes\": [{\"negate\": false, \"cpeMatch\": [{\"criteria\": \"cpe:2.3:a:php:php:*:*:*:*:*:*:*:*\", \"vulnerable\": true, \"matchCriteriaId\": \"0B8F76E6-7BD5-4532-B99E-25CE01A739B7\", \"versionEndIncluding\": \"5.6.29\", \"versionStartIncluding\": \"5.0.0\"}, {\"criteria\": \"cpe:2.3:a:php:php:*:*:*:*:*:*:*:*\", \"vulnerable\": true, \"matchCriteriaId\": \"1CEBCBE0-832F-4164-BAA8-63ACC07AF862\", \"versionEndExcluding\": \"7.0.14\", \"versionStartIncluding\": \"7.0.0\"}], \"operator\": \"OR\"}]}], \"sourceIdentifier\": \"cve@mitre.org\"}}\n",
    "LastUpdate": 0,
    "VendorL": [
      "php"
    ],
    "ProductL": [
      "php"
    ],
    "Software_Repo_Mappings": []
  },
  "Software_Repo_Mapping_Conditions": [
    {
      "Software_Repo_Mapping_ConditionId": 0,
      "Software_Repo_MappingId": null,
      "Criteria": "cpe:2.3:a:php:php:*:*:*:*:*:*:*:*",
      "VersionEndExcluding": null,
      "VersionEndIncluding": "5.6.29",
      "VersionStartExcluding": null,
      "VersionStartIncluding": "5.0.0",
      "Vulnerable": true,
      "Software_Repo_Mapping": null
    },
    {
      "Software_Repo_Mapping_ConditionId": 0,
      "Software_Repo_MappingId": null,
      "Criteria": "cpe:2.3:a:php:php:*:*:*:*:*:*:*:*",
      "VersionEndExcluding": "7.0.14",
      "VersionEndIncluding": null,
      "VersionStartExcluding": null,
      "VersionStartIncluding": "7.0.0",
      "Vulnerable": true,
      "Software_Repo_Mapping": null
    }
  ]
}